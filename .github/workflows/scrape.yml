name: Letterboxd Data Scraping

on:
  schedule:
    - cron: '0 8 * * *'        # Daily at 08:00 UTC
  workflow_dispatch:           # Manual trigger
  push:
    branches:
      - main                   # Run on pushes to main

jobs:
  scrape-and-update:
    runs-on: ubuntu-latest

    permissions:
      contents: write          # Allow committing back to the repo

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r scraper/requirements.txt

      - name: Run Letterboxd scraper
        env:
          LETTERBOXD_USERNAME: ${{ secrets.LETTERBOXD_USERNAME }}
          TMDB_API_KEY:     ${{ secrets.TMDB_API_KEY }}
        run: |
          cd scraper
          python scrape_letterboxd.py

      - name: Move generated data into place
        run: |
          mkdir -p data
          if [ -f scraper/data/movies.csv ]; then
            mv scraper/data/movies.csv data/
          fi
          if [ -f scraper/data/stats.json ]; then
            mv scraper/data/stats.json data/
          fi

      - name: Resolve any rebase conflicts in stats.json
        run: |
          # If during a rebase conflict, accept the incoming stats.json update
          if grep -q '^<<<<<<<' data/stats.json; then
            git add data/stats.json
            git rebase --continue || echo "No rebase in progress"
          fi

      - name: Commit and push updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add data/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update Letterboxd data â€” $(date -u '+%Y-%m-%d %H:%M:%S UTC')"
            git push
          fi
